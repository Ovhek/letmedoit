package cat.copernic.letmedoit.General.model

class UsersProvider {

    companion object{
        fun obtenerUsers() : ArrayList<cat.copernic.letmedoit.General.model.Users> {
            return arrayListOf(
                cat.copernic.letmedoit.General.model.Users(
                    "Pau",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Ismael",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Lausin",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Mire",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Nico",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Maxi",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Mauri",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Jose",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Alex",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Paco",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Ares",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsmEDEECael",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IEDEDsmael",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "DEDl",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Pau",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsCEDCAmael",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsmaCDCEel",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsWXSWmael",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsECECmael",
                    true,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "Ismael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsCECAXSmael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsmCECASael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsmCEWCWXael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsmECWCWECael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsEECECWmael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IsmEDEECael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "IEDEDsmael",
                    false,
                ),
                cat.copernic.letmedoit.General.model.Users(
                    "DEDl",
                    false,
                ),
            )
        }
    }
}